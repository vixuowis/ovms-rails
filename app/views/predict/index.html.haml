%script{:src=>"#{asset_path('jquery.rest.js')}"}
%script{:src=>"#{asset_path('predict.js.coffee')}"}
.row 
  .span12
    %h4.header 漏洞预测
    / .row
    /   .span1
    /     目标主机
    /   .span3{:style=>"width:200px;"}
    /     %select{:name => ""}
    /       %option{:value => "1"} Windows 8 / 192.168.1.1
    /       %option{:value => "2"} Ubuntu 14.04 / 192.168.1.2
    /       %option{:value => "3"} Redhat 5 / 192.168.1.3
    /   .span8
    /     %button.btn-small.btn-success 添加主机
    %br/ 
    .container
      .row
        .span2
          %h4 新漏洞CVSS预评估
          %p.sub
            %small 
              利用朴素贝叶斯算法，我们可以根据大量先验知识获得未知漏洞发生的可能性，预测出新漏洞的估值。右侧会显示30天内漏洞的评估值，评估后仍为n/a的条目为废弃条目。
          #start.btn.btn-primary 开始预评估
        .span10
          - if !@vuln_list.nil?
            %table.table.table-striped.sortable
              %thead
                %tr
                  %th{:style=>"min-width:110px"} CVE ID
                  %th 预估CVSS
                  %th 漏洞描述
                  %th{:style=>"min-width:80px"} 发布
                  %th{:style=>"min-width:80px"} 最近修改
              %tbody
                - @vuln_list.each do |each_vuln|
                  %tr
                    %td
                      %a{:href=>"#{each_vuln[6]}",:target=>"_blank"}
                        = each_vuln[0]
                    %td
                      - if !each_vuln[1].nil?
                        - if each_vuln[1].to_f>=7.0
                          %span.badge.badge-important
                            = each_vuln[1]
                        - elsif each_vuln[1].to_f>=4.0
                          %span.badge.badge-warning
                            = each_vuln[1]
                        - else
                          %span.badge.badge-info
                            = each_vuln[1]
                      - else
                        %span.badge n/a
                    %td
                      %p
                        = each_vuln[2]
                    %td 
                      = each_vuln[3]
                    %td 
                      = each_vuln[4]
    / .container.divide
    /   .row
    /     .span2
    /       %h4 发生位置预测
    /       %p.sub
    /         %small 
    /           利用朴素贝叶斯算法，我们可以根据大量先验知识获得未知漏洞发生的可能性，预测出具体哪一种软件或模块符合漏洞发生模式。
    /     .span10
    /       %p graph
    / .container.divide
    /   .row
    /     .span2
    /       %h4 智能预测排序
    /       %p.sub
    /         %small 
    /           综合以上两种方法，根据目标机状态，生成漏洞发生的预测顺序列表，管理员可根据该列表重点排查相关漏洞。
    /     .span10
    /       %p graph